{
  "formatVersion": 1,
  "database": {
    "version": 4,
    "identityHash": "a4a7d6d39837861e5362c694cd977f9b",
    "entities": [
      {
        "tableName": "Author",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`authorId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "authorId",
            "columnName": "authorId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "authorId"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_Author_name",
            "unique": true,
            "columnNames": [
              "name"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_Author_name` ON `${TABLE_NAME}` (`name`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "Book",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`bookId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `title` TEXT NOT NULL, `subtitle` TEXT, `description` TEXT, `publisher` TEXT, `published` INTEGER, `isOwned` INTEGER NOT NULL, `isFavorite` INTEGER NOT NULL, `progress` TEXT NOT NULL, `coverURI` TEXT, `identifier` TEXT, `media` TEXT NOT NULL, `language` TEXT)",
        "fields": [
          {
            "fieldPath": "bookId",
            "columnName": "bookId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "subtitle",
            "columnName": "subtitle",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "publisher",
            "columnName": "publisher",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "published",
            "columnName": "published",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isOwned",
            "columnName": "isOwned",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isFavorite",
            "columnName": "isFavorite",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "progress",
            "columnName": "progress",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "coverURI",
            "columnName": "coverURI",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "identifier",
            "columnName": "identifier",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "media",
            "columnName": "media",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "language",
            "columnName": "language",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "bookId"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "BookAuthor",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`bookId` INTEGER NOT NULL, `authorId` INTEGER NOT NULL, PRIMARY KEY(`bookId`, `authorId`), FOREIGN KEY(`bookId`) REFERENCES `Book`(`bookId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`authorId`) REFERENCES `Author`(`authorId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "bookId",
            "columnName": "bookId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "authorId",
            "columnName": "authorId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "bookId",
            "authorId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_BookAuthor_bookId",
            "unique": false,
            "columnNames": [
              "bookId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_BookAuthor_bookId` ON `${TABLE_NAME}` (`bookId`)"
          },
          {
            "name": "index_BookAuthor_authorId",
            "unique": false,
            "columnNames": [
              "authorId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_BookAuthor_authorId` ON `${TABLE_NAME}` (`authorId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "Book",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "bookId"
            ],
            "referencedColumns": [
              "bookId"
            ]
          },
          {
            "table": "Author",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "authorId"
            ],
            "referencedColumns": [
              "authorId"
            ]
          }
        ]
      },
      {
        "tableName": "BookPlacement",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`bookId` INTEGER NOT NULL, `placeId` INTEGER NOT NULL, `roomId` INTEGER, `bookshelfId` INTEGER, PRIMARY KEY(`bookId`), FOREIGN KEY(`bookId`) REFERENCES `Book`(`bookId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`placeId`) REFERENCES `Place`(`placeId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`roomId`) REFERENCES `Room`(`roomId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`bookshelfId`) REFERENCES `Bookshelf`(`bookshelfId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "bookId",
            "columnName": "bookId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "placeId",
            "columnName": "placeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "roomId",
            "columnName": "roomId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "bookshelfId",
            "columnName": "bookshelfId",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "bookId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_BookPlacement_bookId",
            "unique": false,
            "columnNames": [
              "bookId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_BookPlacement_bookId` ON `${TABLE_NAME}` (`bookId`)"
          },
          {
            "name": "index_BookPlacement_placeId",
            "unique": false,
            "columnNames": [
              "placeId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_BookPlacement_placeId` ON `${TABLE_NAME}` (`placeId`)"
          },
          {
            "name": "index_BookPlacement_roomId",
            "unique": false,
            "columnNames": [
              "roomId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_BookPlacement_roomId` ON `${TABLE_NAME}` (`roomId`)"
          },
          {
            "name": "index_BookPlacement_bookshelfId",
            "unique": false,
            "columnNames": [
              "bookshelfId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_BookPlacement_bookshelfId` ON `${TABLE_NAME}` (`bookshelfId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "Book",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "bookId"
            ],
            "referencedColumns": [
              "bookId"
            ]
          },
          {
            "table": "Place",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "placeId"
            ],
            "referencedColumns": [
              "placeId"
            ]
          },
          {
            "table": "Room",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "roomId"
            ],
            "referencedColumns": [
              "roomId"
            ]
          },
          {
            "table": "Bookshelf",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "bookshelfId"
            ],
            "referencedColumns": [
              "bookshelfId"
            ]
          }
        ]
      },
      {
        "tableName": "BookGenre",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`bookId` INTEGER NOT NULL, `genreId` INTEGER NOT NULL, PRIMARY KEY(`bookId`, `genreId`), FOREIGN KEY(`bookId`) REFERENCES `Book`(`bookId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`genreId`) REFERENCES `Genre`(`genreId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "bookId",
            "columnName": "bookId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "genreId",
            "columnName": "genreId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "bookId",
            "genreId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_BookGenre_bookId",
            "unique": false,
            "columnNames": [
              "bookId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_BookGenre_bookId` ON `${TABLE_NAME}` (`bookId`)"
          },
          {
            "name": "index_BookGenre_genreId",
            "unique": false,
            "columnNames": [
              "genreId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_BookGenre_genreId` ON `${TABLE_NAME}` (`genreId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "Book",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "bookId"
            ],
            "referencedColumns": [
              "bookId"
            ]
          },
          {
            "table": "Genre",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "genreId"
            ],
            "referencedColumns": [
              "genreId"
            ]
          }
        ]
      },
      {
        "tableName": "Genre",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`genreId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "genreId",
            "columnName": "genreId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "genreId"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_Genre_name",
            "unique": true,
            "columnNames": [
              "name"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_Genre_name` ON `${TABLE_NAME}` (`name`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "Loan",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`bookId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `type` TEXT NOT NULL, `who` TEXT NOT NULL, `start` INTEGER NOT NULL, FOREIGN KEY(`bookId`) REFERENCES `Book`(`bookId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "bookId",
            "columnName": "bookId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "who",
            "columnName": "who",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "start",
            "columnName": "start",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "bookId"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "Book",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "bookId"
            ],
            "referencedColumns": [
              "bookId"
            ]
          }
        ]
      },
      {
        "tableName": "Note",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`bookId` INTEGER NOT NULL, `note` TEXT NOT NULL, PRIMARY KEY(`bookId`), FOREIGN KEY(`bookId`) REFERENCES `Book`(`bookId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "bookId",
            "columnName": "bookId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "note",
            "columnName": "note",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "bookId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "Book",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "bookId"
            ],
            "referencedColumns": [
              "bookId"
            ]
          }
        ]
      },
      {
        "tableName": "Place",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`placeId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "placeId",
            "columnName": "placeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "placeId"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Room",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`roomId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `parentPlace` INTEGER NOT NULL, FOREIGN KEY(`parentPlace`) REFERENCES `Place`(`placeId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "roomId",
            "columnName": "roomId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "parentPlace",
            "columnName": "parentPlace",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "roomId"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_Room_parentPlace",
            "unique": false,
            "columnNames": [
              "parentPlace"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_Room_parentPlace` ON `${TABLE_NAME}` (`parentPlace`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "Place",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "parentPlace"
            ],
            "referencedColumns": [
              "placeId"
            ]
          }
        ]
      },
      {
        "tableName": "Bookshelf",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`bookshelfId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `parentRoom` INTEGER NOT NULL, FOREIGN KEY(`parentRoom`) REFERENCES `Room`(`roomId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "bookshelfId",
            "columnName": "bookshelfId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "parentRoom",
            "columnName": "parentRoom",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "bookshelfId"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_Bookshelf_parentRoom_name",
            "unique": true,
            "columnNames": [
              "parentRoom",
              "name"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_Bookshelf_parentRoom_name` ON `${TABLE_NAME}` (`parentRoom`, `name`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "Room",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "parentRoom"
            ],
            "referencedColumns": [
              "roomId"
            ]
          }
        ]
      },
      {
        "tableName": "Wishlist",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`bookId` INTEGER NOT NULL, PRIMARY KEY(`bookId`), FOREIGN KEY(`bookId`) REFERENCES `Book`(`bookId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "bookId",
            "columnName": "bookId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "bookId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "Book",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "bookId"
            ],
            "referencedColumns": [
              "bookId"
            ]
          }
        ]
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'a4a7d6d39837861e5362c694cd977f9b')"
    ]
  }
}